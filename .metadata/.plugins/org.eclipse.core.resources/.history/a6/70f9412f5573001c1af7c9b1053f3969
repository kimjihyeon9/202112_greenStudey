package Day20_6;

import static Day20_6.R.*;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import gui_myframe.MyJFrame;

public class TestJTable extends MyJFrame {
	
	
	public TestJTable() {
		super("JTable 연습", 640, 480);
	}
	
	private void mkTableData(){
		colNames = new Object[] {"IDX", "USER", "EMAIL", "PHONE"};
		data = new Object[][] {
			{1, "hong", "hong@naver.com", "010-1234-5678"},
			{2, "kim", "kim@naver.com", "010-2222-2222"},
			{3, "lee", "lee@naver.com", "010-3333-3333"}
		};
	}

	@Override
	protected void displayLayer() {
		mkTableData();
		
		contentPan = getContentPane();
		
		contentPan.add(BorderLayout.WEST, new LeftPane());
		contentPan.add(BorderLayout.SOUTH, new BottomPane());
		
		tbModel = new DefaultTableModel(data, colNames);
		table = new JTable(tbModel);
		
		scrollPane = new JScrollPane(table);
		contentPan.add(scrollPane);
		
//		addRowDataTest();
	}
	
	private void addRowDataTest() {
		tbModel.setDataVector(null, colNames); // 정보 초기화, 테이블만 남는다
		tbModel.addRow(new Object[] {4, "aaa", "aaa@naver,com", "010-4444-4444"});
		tbModel.addRow(new Object[] {5, "bbb", "bbb@naver,com", "010-5555-5555"});
	}

	@Override
	protected void actionEvt() {
		// 버튼 이벤트 핸들러 추가
		allbtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				System.out.println(">>> All Button 클릭!");
			}
		});
		
		inputbtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				System.out.println(">>> Input Button 클릭!");
				
				// textField의 데이터를 읽어온다.
				String name = txtFld2.getText();
				txtFld2.setText("");
				String email = txtFld3.getText();
				txtFld3.setText("");
				String phone = txtFld4.getText();
				txtFld4.setText("");
				System.out.println("name => " + name);
				System.out.println("email => " + email);
				System.out.println("phone => " + phone);
				
				// TableModel에 반영해주기
				tbModel = new DefaultTableModel(data, colNames);
				table = new JTable(tbModel);
			}
		});
		
		searchbtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				System.out.println(">>> Search Button 클릭!");
			}
		});
		
		modifybtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				System.out.println(">>> Modify Button 클릭!");
			}
		});
		
		deletebtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				System.out.println(">>> Delete Button 클릭!");
			}
		});
		
		finishbtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				System.out.println(">>> Finish Button 클릭!");
				JOptionPane.showMessageDialog(TestJTable.this, "굿바이~");
				dispose();
				System.exit(0);
			}
		});
	}
	
	public static void main(String[] args) {
		new TestJTable().setVisible(true);
	}

}
